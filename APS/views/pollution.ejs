<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <title>AI Pollution Predictor</title>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" />
  <link href="https://fonts.googleapis.com/css2?family=Rubik:wght@300;400;600&display=swap" rel="stylesheet" />
  <style>
    body {
      font-family: 'Rubik', sans-serif;
      background: linear-gradient(to right, #dfe9f3, #ffffff);
      padding: 20px;
      text-align: center;
    }
    h1 { color: #2c3e50; margin-bottom: 30px; }
    form {
      background: white;
      padding: 20px;
      border-radius: 10px;
      max-width: 500px;
      margin: auto;
      box-shadow: 0 0 15px rgba(0,0,0,0.1);
    }
    input{
      width: 100%; padding: 10px; margin-top: 10px;
      border-radius: 6px; border: 1px solid #ccc;
    }
    button {
      width: 100%; padding: 12px; margin-top: 15px;
      background-color: #34495e; color: white;
      font-size: 16px; border: none; border-radius: 6px;
    }
    button:hover { background-color: #2c3e50; }
    #result { margin-top: 20px; font-size: 20px; color: #34495e; }
    table {
      width: 90%; margin: 30px auto;
      border-collapse: collapse; box-shadow: 0 0 10px rgba(0,0,0,0.05);
    }
    th, td {
      padding: 12px; border-bottom: 1px solid #ccc;
    }
    th { background-color: #34495e; color: white; }
    nav { margin-top: 40px; }
    nav a {
      margin: 0 10px; font-size: 20px; color: #34495e;
    }
  </style>
</head>
<body>

  <h1><i class="fa-solid fa-smog"></i> AI Pollution Predictor</h1>

  <form id="predictForm">
    <input name="country" type="text" placeholder="Country Name" required />
    <input name="city" type="text" placeholder="City Name" required />
    <input name="temperature" type="number" placeholder="Temperature (Â°C)" required />
    <input name="humidity" type="number" placeholder="Humidity (%)" required />
    <input name="wind_speed" type="number" placeholder="Wind Speed (m/s)" required />
    <button type="submit"><i class="fa-solid fa-wind"></i> Predict AQI</button>
  </form>

  <div id="result"></div>

  <h2><i class="fa-solid fa-clock-rotate-left"></i> Recent Predictions</h2>
  <table>
    <tr>
      <th>Date</th><th>Country</th><th>City</th><th>Temp</th><th>Humidity</th><th>Wind_speed</th><th>AQI</th>
    </tr>
  <% records.forEach(record => { %>
    <tr>
      <td><%= record.date %></td>
      <td><%= record.country %></td>
      <td><%= record.city %></td>
      <td><%= record.temperature %></td>
      <td><%= record.humidity %></td>
      <td><%= record.wind_speed %></td>
      <td><%= record.predicted_pollution %></td>
    </tr>
  <% }) %>


  </table>

  <nav>
    <a href="/"><i class="fa-solid fa-house"></i> Home</a>
    <a href="/search"><i class="fa-solid fa-magnifying-glass-location"></i> Search</a>
  </nav>

  <script>
    document.getElementById("predictForm").addEventListener("submit", async function (e) {
      e.preventDefault();
     
      const country = this.city.value;
      const city = this.city.value;
      const temperature = parseFloat(this.temperature.value);
      const humidity = parseFloat(this.humidity.value);
      const wind_speed = parseFloat(this.wind_speed.value);

      try {
        const response = await fetch("http://127.0.0.1:5000/predict", {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({ temperature, humidity, wind_speed })
        });

        const result = await response.json();

        if (result.predicted_aqi) {
          document.getElementById("result").innerHTML = `<strong>Predicted AQI:</strong> ${result.predicted_aqi}`;

          await fetch('/add', {
  method: 'POST',
  headers: { 'Content-Type': 'application/json' },
  body: JSON.stringify({
    country,
    city,
    temperature,
    humidity,
    wind_speed,
    predicted_pollution: result.predicted_aqi,
    date: new Date().toISOString()
  })
});


          setTimeout(() => location.reload(), 1000);
        } else {
          document.getElementById("result").innerText = "Prediction failed.";
        }
      } catch (err) {
        document.getElementById("result").innerText = "Error: " + err.message;
      }
    });
  </script>

</body>
</html>
